hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    hydra_help: ???
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - main.steps='train_random_forest'
    - modeling.max_tfidf_features=10,15,30
    - modeling.random_forest.max_features=0.1,0.33,0.5,0.75,1
  job:
    name: main
    override_dirname: main.steps='train_random_forest',modeling.max_tfidf_features=10,15,30,modeling.random_forest.max_features=0.1,0.33,0.5,0.75,1
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.0.6
    cwd: /home/lamartine/MLOps-Udacity
  verbose: false
main:
  components_repository: https://github.com/udacity/nd0821-c2-build-model-workflow-starter.git#components
  project_name: nyc_airbnb
  experiment_name: development
  steps: train_random_forest
etl:
  sample: sample1.csv
  min_price: 10
  max_price: 350
data_check:
  kl_threshold: 0.2
  csv: clean_sample.csv:latest
  ref: clean_sample.csv:reference
data_split:
  input: clean_sample.csv:latest
train_random_forest:
  output_artifact: random_forest_export
  trainval_artifact: trainval_data.csv:latest
test_regression_model:
  mlflow_model: random_forest_export:prod
  test_dataset: test_data.csv:latest
modeling:
  test_size: 0.2
  val_size: 0.2
  random_seed: 42
  stratify_by: neighbourhood_group
  max_tfidf_features: 5
  random_forest:
    n_estimators: 100
    max_depth: 15
    min_samples_split: 4
    min_samples_leaf: 3
    n_jobs: -1
    criterion: mae
    max_features: 0.5
    oob_score: true
